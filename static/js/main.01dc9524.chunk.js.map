{"version":3,"sources":["logo.svg","components/SearchZips.js","components/SearchCities.js","App.js","reportWebVitals.js","index.js"],"names":["SearchZips","props","handleInputChange","event","setState","zipCode","target","value","handleSearchClick","a","zipName","state","linkToAPI","axios","get","response","apiData","data","found","console","log","status","makeTable","currData","table","city","City","State","pop","EstimatedPopulation","location","LocationText","push","id","style","alignItems","justifyContent","className","type","this","onChange","placeholder","onClick","Component","SearchCities","cityTitle","cityName","toUpperCase","foundMatch","map","zipcode","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01dc9524.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {Component} from 'react';\nimport './SearchZips.css'\n//import SearchBar from './SearchBar';\n\nclass SearchZips extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tapiData: [],\n\t\t\tzipCode: \"\",\n\t\t\tfound: false\n\n\t\t}\n\t}\n\n\thandleInputChange = (event) => {\n        this.setState({zipCode: event.target.value});\n    }\n\n    handleSearchClick = async () => {\n        let zipName = this.state.zipCode;\n        let linkToAPI = 'https://ctp-zip-api.herokuapp.com/zip/'+ zipName;\n\n        try {\n            let response = await axios.get(linkToAPI);\n            this.setState({apiData: response.data, found: true});\n            console.log(this.state.apiData);\n           // console.log(this.state.apiData);\n        } catch (error) {\n            if (error.response) {\n                /*\n                 * The request was made and the server responded with a\n                 * status code that falls out of the range of 2xx\n                 */\n                console.log(error.response.data); //Not Found\n                console.log(error.response.status); //404\n                this.setState({found: false});\n            }\n       \n        }\n    } \n    \n\tmakeTable = () => \n    {\n        let currData = this.state.apiData;\n        let foundMatch = this.state.found;\n        //console.log(\"making table\");\n        let table = [];\n        //found is false when we get 404 error\n        if(!foundMatch)\n        {\n         //   console.log(\"not found\");\n            table.push(<tr key={-1}><td style={{alignItems:'center', justifyContent:'center'}}>No Results</td></tr>);\n            return table;\n        } \n        else \n        {\n            let city = currData[0].City;\n            let state = currData[0].State;\n            let pop = currData[0].EstimatedPopulation;\n            let location = currData[0].LocationText;\n            table.push(\n              <tr key={currData.id}>\n                <h2>{location}</h2>\n                <p>City: {city}</p>\n                <p>State: {state}</p>\n                <p>Population: {pop}</p>\n              </tr>\n            );\n            return table;\n        }\n    } \n\n\trender() \n\t{\n\t\treturn (\n\t\t<div className = \"wholeting\">\n\t\t\t<div className = \"search\">\n\t\t\t\t<h1>Search Zip Codes:</h1>\n\t\t\t\t<input type=\"text\" value={this.state.zipCode} onChange={this.handleInputChange} placeholder=\"Enter Zip Code\"/>\n                <button className=\"search-button\" onClick={this.handleSearchClick}>Search</button>\n\t\t\t</div>\n\n            <div className = \"zipdata\">\n\n            </div>\n\t\t\t<div className = \"tabletime\">\n\t            <table id=\"data\">\n\t                <tbody>\n\t                {this.makeTable()}\n\t                </tbody>\n\t            </table>\n\t        </div>\n\t    </div>    \n\t\t)\n\t}\n\n}\n\n\nexport default SearchZips","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {Component} from 'react';\n//import './SearchCities.css'\n//import SearchBar from './SearchBar';\n\nclass SearchCities extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tapiData: [],\n\t\t\tcityTitle: \"\",\n\t\t\tfound: false\n\n\t\t}\n\t}\n\n\thandleInputChange = (event) => {\n        this.setState({cityTitle: event.target.value});\n    }\n\n    handleSearchClick = async () => {\n        let cityName = this.state.cityTitle;\n        console.log(\"cityName before: \" + cityName);\n        cityName = cityName.toUpperCase();\n        console.log(cityName);\n        let linkToAPI = 'https://ctp-zip-api.herokuapp.com/city/'+ cityName;\n\n        try {\n            let response = await axios.get(linkToAPI);\n            this.setState({apiData: response.data, found: true});\n            console.log(this.state.apiData);\n           // console.log(this.state.apiData);\n        } catch (error) {\n            if (error.response) {\n                /*\n                 * The request was made and the server responded with a\n                 * status code that falls out of the range of 2xx\n                 */\n                console.log(error.response.data); //Not Found\n                console.log(error.response.status); //404\n                this.setState({found: false});\n            }\n       \n        }\n    } \n    \n\tmakeTable = () => \n    {\n        let currData = this.state.apiData;\n        let foundMatch = this.state.found;\n        //console.log(\"making table\");\n        let table = [];\n        //found is false when we get 404 error\n        if(!foundMatch)\n        {\n         //   console.log(\"not found\");\n            table.push(<tr key={-1}><td style={{alignItems:'center', justifyContent:'center'}}>No Results</td></tr>);\n            return table;\n        } \n        else \n        {\n            console.log(currData[0]);\n            table.push(\n                <h2>{this.state.cityTitle.toUpperCase()}</h2>\n            )\n            currData.map(zipcode => (\n                table.push(\n                    <tr key={currData.id}>\n                        <td>{zipcode}</td>\n                    </tr>\n                )\n\n            ))\n            //console.log(State);\n            //console.log({state});\n            return table;\n        }\n    } \n\n\trender() \n\t{\n\t\treturn (\n\t\t<div className = \"wholeting\">\n\t\t\t<div className = \"search\">\n\t\t\t\t<h1>Search Cities:</h1>\n\t\t\t\t<input type=\"text\" value={this.state.cityTitle} onChange={this.handleInputChange} placeholder=\"Enter City\"/>\n                <button className=\"search-button\" onClick={this.handleSearchClick}>Search</button>\n\t\t\t</div>\n\n            <div className = \"citydata\">\n\n            </div>\n\t\t\t<div className = \"tabletime\">\n\t            <table id=\"data\">\n\t                <tbody>\n\t                {this.makeTable()}\n\t                </tbody>\n\t            </table>\n\t        </div>\n\t    </div>    \n\t\t)\n\t}\n\n}\n\n\nexport default SearchCities","import logo from './logo.svg';\nimport React, {Component} from 'react';\nimport SearchZips from './components/SearchZips.js'\n//import SearchApi from './components/SearchApi.js'\nimport SearchCities from './components/SearchCities.js'\n//import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n//import RouterHome from './components/RouterHome.js'\nimport './App.css';\n\nfunction App () {\n  return (\n  \t<div>\n  \t\t<SearchZips/>\n\n  \t\t<SearchCities/>\n  \t</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}